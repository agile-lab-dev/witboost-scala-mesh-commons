include:
  - project: 'AgileFactory/Witboost.Mesh/witboost.Mesh.CI'
    ref: 'main'
    file: 'common/witboost.helm.gitlab-ci.yml'

image: sbtscala/scala-sbt:eclipse-temurin-jammy-17.0.9_9_1.9.7_2.13.12

stages:
  - setup
  - check
  - test
  - publish

variables:
  SBT_OPTS: "-Dsbt.global.base=sbt-cache/sbtboot -Dsbt.boot.directory=sbt-cache/boot -Dsbt.ivy.home=sbt-cache/ivy -Dsbt.ci=true -Dmockserver.logLevel=OFF"

cache:
  untracked: true
  paths:
    - "sbt-cache/ivy/cache"
    - "sbt-cache/boot"
    - "sbt-cache/sbtboot"

setup:
  stage: setup
  extends: .witboost.helm.base-job
  cache: []
  before_script: []
  script:
    - !reference [.witboost.helm.clone-scripts, script]
    - !reference [.witboost.helm.get-version, script]
    - echo "VERSION=${VERSION}" >> vars.env
  artifacts:
    reports:
      dotenv: vars.env

check:
  stage: check
  script:
    - sbt scalafmtSbtCheck scalafmtCheckAll ${SBT_OPTS}

test:
  stage: test
  script:
    - sbt -mem 2048 clean coverage test coverageAggregate ${SBT_OPTS}
  coverage: '/Statement coverage[A-Za-z\.*]\s*:\s*([^%]+)/'
  artifacts:
    paths:
      - target/scala-2.13/scoverage-report/*
      - target/scala-2.13/coverage-report/*
    reports:
      coverage_report:
        coverage_format: cobertura
        path: target/scala-2.13/coverage-report/cobertura.xml

publish:
  stage: publish
  script:
    - export ARTIFACT_VERSION=${VERSION}
    - sbt k8tyGitlabCIPublish ${SBT_OPTS}
  only:
    - master
    - tags
    - /(^release\/([0-9]+)\.([0-9]+))/

publishCentral:
  stage: publish
  before_script:
    - apt-get update
    - apt-get install gnupg -y
  script:
    - echo -n "$MAVEN_GPG_KEY" | base64 -d | gpg --batch --import
    - export ARTIFACT_VERSION=${VERSION}
    - sbt publishSigned sonatypeCentralUpload # TODO sonatypeCentralRelease would automatically release it
  only:
    - tags
